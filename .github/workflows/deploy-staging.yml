name: Staging Deployment

on:
  push:
    branches:
      - staging
    paths:
      - .github/workflows/deploy-staging.yml
      - front_end/**
      - infrastructure/**
      - model/**

jobs:
  terraform:
    name: "Terraform Deployment"
    runs-on: ubuntu-latest
    environment: 
      name: staging
    defaults:
      run:
        working-directory: infrastructure/terraform
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/bayes-bet-github-actions-deployment
          aws-region: ${{ vars.AWS_REGION }}
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.TERRAFORM_BUCKET }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_twitter_bearer_token: ${{ secrets.TWITTER_BEARER_TOKEN }}
          TF_VAR_twitter_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TF_VAR_twitter_consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          TF_VAR_twitter_access_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TF_VAR_twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TF_VAR_deployment_version: ${{ github.sha }}
        run: terraform apply -no-color -var-file=variables/staging.tfvars -auto-approve

  zappa:
    needs: terraform
    name: "Zappa Deployment"
    runs-on: ubuntu-latest
    environment: 
      name: staging
    defaults:
      run:
        working-directory: front_end
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/bayes-bet-github-actions-deployment
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Cache pipenv virtualenv
        id: cache-pipenv-front-end-staging
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-front-end-staging-${{ hashFiles('**/Pipfile.lock') }} 

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install && pipenv run pip install setuptools==74.1.2

      - name: Update Zappa Settings
        uses: restackio/update-json-file-action@v2.0
        with:
          file: front_end/app/zappa_settings.json
          fields: "{\"staging.s3_bucket\": \"${{ secrets.ZAPPA_S3_BUCKET }}\", \"staging.aws_environment_variables.DYNAMODB_TABLE_NAME\": \"${{ secrets.DJANGO_DYNAMODB_TABLE_NAME }}\", \"staging.aws_environment_variables.S3_BUCKET_NAME\": \"${{ secrets.DJANGO_S3_BUCKET_NAME }}\", \"staging.aws_environment_variables.DJANGO_SECRET_KEY\": \"${{ secrets.DJANGO_SECRET_KEY }}\"}"

      - name: Zappa Deploy
        run: cd app && pipenv run zappa update staging
